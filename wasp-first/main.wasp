app waspFirst {
  wasp: {
    version: "^0.13.2"
  },
  title: "My First Wasp TODO",
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login"
  }
}

//Routes
route RootRoute { path: "/", to: MainPage }
page MainPage {
  authRequired: true,
  component: import { MainPage } from "@src/MainPage"
}

route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import { SignupPage } from "@src/SignupPage"
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import { LoginPage } from "@src/LoginPage"
}

route HelloRoute { path: "/hello/:name", to: HelloPage}
page HelloPage {
  component: import { HelloPage } from "@src/HelloPage"
}
route TodoRoute {path: "/todo", to: TodoPage}
page TodoPage {
  authRequired: true,
  component: import {TodoPage} from "@src/TodoPage"
}

//Operations
//Queries
query getTasks {
  fn: import {getTasks} from "@src/queries",
  entities: [Task]
}

//Actions
action createTask {
  fn: import {createTask} from "@src/actions",
  entities: [Task]
}

action updateTask {
  fn: import {updateTask} from "@src/actions",
  entities: [Task]
}

action deleteTask {
  fn: import {deleteTask} from "@src/actions",
  entities: [Task]
}

//DB Entities
entity User {=psl
  id Int @id @default(autoincrement())
  tasks Task[]
psl=}

entity Task {=psl
  id Int @id @default(autoincrement())
  description String
  isDone Boolean @default(false)
  user User? @relation(fields: [userId], references: [id])
  userId Int?
psl=}